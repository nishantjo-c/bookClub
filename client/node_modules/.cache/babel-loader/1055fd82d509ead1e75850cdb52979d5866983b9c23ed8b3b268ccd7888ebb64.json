{"ast":null,"code":"var _s = $RefreshSig$();\nimport postCSS from '../styles/post.module.css';\nimport { useState, useRef, useEffect } from 'react';\nconst Post = () => {\n  _s();\n  const [post, setPost] = useState('');\n  const [allPost, setallPost] = useState([]);\n  const textareaRef = useRef(null);\n  const [like, setLike] = useState(0);\n  const id = localStorage.userUniqueId;\n  const [isLoading, setIsLoading] = useState(true);\n  function handleChange(e) {\n    setPost(e.target.value);\n  }\n  function handleClick() {\n    setLike(like + 1);\n  }\n\n  /*\tAPI CALL WHEN SUBMITTING A POST\t*/\n  async function submit() {\n    if (post != '') {\n      const response = await fetch('http://localhost:4000/home', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id,\n          post\n        })\n      });\n      const data = await response.json();\n\n      // console.log(data)\n      setallPost(data);\n      setPost('');\n      textareaRef.current.value = '';\n    }\n  }\n\n  /*\tAPI CALL TO FETCH DATA CONTINUOUSLY\t*/\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('http://localhost:4000/home');\n      const data = await response.json();\n      setallPost(data);\n      // console.log(data)\n      /*jaan booch k lagaya gya timeout cool lagne k liye*/\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1500);\n    }\n    fetchData();\n  }, []);\n  /*\n  return (\n  \t<div className={postCSS.mainDiv}>\n  \t\t<div className={postCSS.textarea}>\n  \t\t\t\t<textarea placeholder='Add a post:' \n  \t\t\t\t\t\tid={postCSS.textarea} \n  \t\t\t\t\t\trows='2' cols='10' \n  \t\t\t\t\t\tonChange={handleChange} \n  \t\t\t\t\t\tref={textareaRef} \n  \t\t\t\t\t/>\n  \t\t\t\t<button id={postCSS.button} onClick={submit}>post</button>\n  \t\t</div>\n  \t\t\t<div className={postCSS.updates}>\n  \t\t\t{ isLoading ? (<p>Loading wait...</p>) : \n  \t\t\t\t\t(allPost.map((element, key) => {\n  \t\t\t\t\t\treturn (\n  \t\t\t\t\t\t\t<div className={postCSS.post} key={key}>\n  \t\t\t\t\t\t\t\t<p>{element.post}</p>\n  \t\t\t\t\t\t\t\t<div className={postCSS.likeandcomment}>\n  \t\t\t\t\t\t\t\t\t<p>{like}</p>\n  \t\t\t\t\t\t\t\t\t<button className={postCSS.like} onClick={handleClick}>like</button>\n  \t\t\t\t\t\t\t\t\t<button className={postCSS.comment}>comment</button>\n  \t\t\t\t\t\t\t\t</div>\n  \t\t\t\t\t\t\t</div>\n  \t\t\t\t\t\t)\n  \t\t\t\t\t}))\n  \t\t\t}\n  \t\t</div>\n  \t</div>\n  );*/\n};\n_s(Post, \"PTFIXtPaUz08ZlwrNTNitvpagX4=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["postCSS","useState","useRef","useEffect","Post","_s","post","setPost","allPost","setallPost","textareaRef","like","setLike","id","localStorage","userUniqueId","isLoading","setIsLoading","handleChange","e","target","value","handleClick","submit","response","fetch","method","headers","body","JSON","stringify","data","json","current","fetchData","setTimeout","_c","$RefreshReg$"],"sources":["/home/nishant/Documents/bookclub/client/src/components/post.js"],"sourcesContent":["import postCSS from '../styles/post.module.css';\nimport {useState, useRef, useEffect} from 'react';\n\n\n\nconst Post = () => {\n\n\tconst [post, setPost] = useState('');\n\tconst [allPost, setallPost] = useState([]);\n\tconst textareaRef = useRef(null);\n\tconst [like, setLike] = useState(0);\n\n\n\tconst id = localStorage.userUniqueId;\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tfunction handleChange(e){\n\t\tsetPost(e.target.value);\n\n\t}\n\n\tfunction handleClick(){\n\t\tsetLike(like+1);\n\t}\n\n\t/*\tAPI CALL WHEN SUBMITTING A POST\t*/\n\tasync function submit(){\n\t\tif(post != ''){\n\n\t\t\tconst response = await fetch('http://localhost:4000/home', {\n\t\t\t\tmethod:'POST',\n\t\t\t\theaders:{\n\t\t\t\t\t'Content-Type':'application/json'\n\t\t\t\t},\n\t\t\t\tbody:JSON.stringify({\n\t\t\t\t\tid,\n\t\t\t\t\tpost,\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t});\n\t\t\tconst data = await response.json();\n\n\t\t\t// console.log(data)\n\t\t\tsetallPost(data);\n\t\t\tsetPost('');\n\t\t\ttextareaRef.current.value = '';\n\t\t}\n\t}\n\n\t\t/*\tAPI CALL TO FETCH DATA CONTINUOUSLY\t*/\n\t\tuseEffect(() => {\n\t\t\tasync function fetchData(){\n\t\t\t\tconst response = await fetch('http://localhost:4000/home');\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetallPost(data);\n\t\t\t\t// console.log(data)\n\t\t\t\t/*jaan booch k lagaya gya timeout cool lagne k liye*/\n\t\t\t\tsetTimeout(() => {setIsLoading(false)},1500)\n\t\t\t}\n\t\t\tfetchData();\n\t\t},[])\n\t/*\n\treturn (\n\t\t<div className={postCSS.mainDiv}>\n\t\t\t<div className={postCSS.textarea}>\n\n\t\t\t\t<textarea placeholder='Add a post:' \n\t\t\t\t\t\t\tid={postCSS.textarea} \n\t\t\t\t\t\t\trows='2' cols='10' \n\t\t\t\t\t\t\tonChange={handleChange} \n\t\t\t\t\t\t\tref={textareaRef} \n\t\t\t\t\t\t/>\n\n\t\t\t\t<button id={postCSS.button} onClick={submit}>post</button>\n\t\t\t</div>\n\n\t\t\t<div className={postCSS.updates}>\n\t\t\t\t{ isLoading ? (<p>Loading wait...</p>) : \n\t\t\t\t\t\t(allPost.map((element, key) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={postCSS.post} key={key}>\n\t\t\t\t\t\t\t\t\t<p>{element.post}</p>\n\t\t\t\t\t\t\t\t\t<div className={postCSS.likeandcomment}>\n\t\t\t\t\t\t\t\t\t\t<p>{like}</p>\n\t\t\t\t\t\t\t\t\t\t<button className={postCSS.like} onClick={handleClick}>like</button>\n\t\t\t\t\t\t\t\t\t\t<button className={postCSS.comment}>comment</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);*/\n}\n\n\nexport default Post;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,2BAA2B;AAC/C,SAAQC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAIjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAGnC,MAAMY,EAAE,GAAGC,YAAY,CAACC,YAAY;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAASiB,YAAYA,CAACC,CAAC,EAAC;IACvBZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAExB;EAEA,SAASC,WAAWA,CAAA,EAAE;IACrBV,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;EAChB;;EAEA;EACA,eAAeY,MAAMA,CAAA,EAAE;IACtB,IAAGjB,IAAI,IAAI,EAAE,EAAC;MAEb,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QAC1DC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACP,cAAc,EAAC;QAChB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;UACnBjB,EAAE;UACFP;QAED,CAAC;MACF,CAAC,CAAC;MACF,MAAMyB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;MAElC;MACAvB,UAAU,CAACsB,IAAI,CAAC;MAChBxB,OAAO,CAAC,EAAE,CAAC;MACXG,WAAW,CAACuB,OAAO,CAACZ,KAAK,GAAG,EAAE;IAC/B;EACD;;EAEC;EACAlB,SAAS,CAAC,MAAM;IACf,eAAe+B,SAASA,CAAA,EAAE;MACzB,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMM,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCvB,UAAU,CAACsB,IAAI,CAAC;MAChB;MACA;MACAI,UAAU,CAAC,MAAM;QAAClB,YAAY,CAAC,KAAK,CAAC;MAAA,CAAC,EAAC,IAAI,CAAC;IAC7C;IACAiB,SAAS,CAAC,CAAC;EACZ,CAAC,EAAC,EAAE,CAAC;EACN;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAC;AAAA7B,EAAA,CAzFKD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA4FV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}